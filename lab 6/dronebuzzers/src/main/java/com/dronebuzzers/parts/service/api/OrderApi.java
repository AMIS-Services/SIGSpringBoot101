/**
 * NOTE: This class is auto generated by the swagger code generator program (1.0.11).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package com.dronebuzzers.parts.service.api;

import com.dronebuzzers.parts.service.model.Order;
import com.dronebuzzers.parts.service.model.OrderSummary;
import com.dronebuzzers.parts.service.model.Orders;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2018-03-19T20:22:45.205Z")

@Api(value = "order", description = "the order API")
public interface OrderApi {

    OrderApiDelegate getDelegate();

    @ApiOperation(value = "get order details", nickname = "getOrder", notes = "", response = Order.class, tags={ "orders", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = Order.class),
        @ApiResponse(code = 401, message = "Unauthorized"),
        @ApiResponse(code = 403, message = "Forbidden"),
        @ApiResponse(code = 404, message = "Not Found") })
    @RequestMapping(value = "/order/{id}",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.GET)
    default ResponseEntity<Order> getOrder(@ApiParam(value = "order id",required=true) @PathVariable("id") String id) {
        return getDelegate().getOrder(id);
    }


    @ApiOperation(value = "get parts", nickname = "getOrders", notes = "", response = Orders.class, tags={ "orders", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = Orders.class),
        @ApiResponse(code = 401, message = "Unauthorized"),
        @ApiResponse(code = 403, message = "Forbidden"),
        @ApiResponse(code = 404, message = "Not Found") })
    @RequestMapping(value = "/order",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    default ResponseEntity<Orders> getOrders() {
        return getDelegate().getOrders();
    }


    @ApiOperation(value = "order parts", nickname = "orderParts", notes = "", response = OrderSummary.class, tags={ "orders", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = OrderSummary.class),
        @ApiResponse(code = 201, message = "Created"),
        @ApiResponse(code = 401, message = "Unauthorized"),
        @ApiResponse(code = 403, message = "Forbidden"),
        @ApiResponse(code = 404, message = "Not Found") })
    @RequestMapping(value = "/order",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    default ResponseEntity<OrderSummary> orderParts(@ApiParam(value = "order for drone parts" ,required=true )  @Valid @RequestBody Order order) {
        return getDelegate().orderParts(order);
    }

}
